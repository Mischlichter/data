name: Image Metadata Extraction

on:
  push:
    paths:
      - 'gallerycom/**'

jobs:
  extract-metadata:
    runs-on: ubuntu-latest
    outputs:
      html_files_exist: ${{ steps.check-html-files.outputs.html_files_exist }}
    steps:
      - uses: actions/checkout@v4  # Updated to use the latest version supporting Node.js 20

      - name: Set up Python
        uses: actions/setup-python@v5  # Updated to the latest version
        with:
          python-version: '3.10'  # Specific version to match with your requirements

      - name: Install Python Dependencies
        run: pip install Pillow

      - name: Install exiftool
        run: |
          sudo apt-get update
          sudo apt-get install -y exiftool

      - name: Run Metadata Extraction Script
        run: python lib/library_and_pages_x.py

      - name: Stash any changes
        run: git stash

      - name: Pull latest changes from the repository
        run: git pull --rebase

      - name: Pop the stash
        run: git stash pop

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'Mischlichter'
          git config --global user.email 'alex.stephan.weimar@web.de'
          git add lib/metadata.json
          git add docs/sharing/*.html
          git add docs/sharing/*_favicon.ico
          git commit -m "Update image metadata, HTML pages, and favicons" || echo "No changes to commit"
          git push || echo "Failed to push changes. Check for potential conflicts or issues."

      - name: List Committed HTML Files
        id: check-html-files
        run: |
          html_changed=$(git diff --name-only HEAD^ HEAD | grep -q '\.html$'; echo $?)
          if [ "$html_changed" -eq 0 ]; then
            echo "html_files_exist=true" >> $GITHUB_ENV
            echo "html_files_exist=true" >> $GITHUB_OUTPUT
            git diff --name-only HEAD^ HEAD | grep '\.html$' > html_files.txt
          else
            echo "html_files_exist=false" >> $GITHUB_ENV
            echo "html_files_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload HTML file list
        if: env.html_files_exist == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: html-files
          path: html_files.txt

  check-live-status:
    needs: extract-metadata
    if: ${{ needs.extract-metadata.outputs.html_files_exist == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download HTML files list
        uses: actions/download-artifact@v4
        with:
          name: html-files

      - name: Check and Visit New Pages
        run: |
          if [ ! -f html_files.txt ]; then
            echo "No HTML files to process."
            exit 0
          fi

          cat html_files.txt  # Output file content for debugging
          IFS=$'\n' read -r -a html_files <<< "$(cat html_files.txt)"

          for file in "${html_files[@]}"; do
            filename="${file#docs/sharing/}"  # Removes 'docs/sharing/' from the path
            url="https://hogeai.com/sharing/${filename}"
            echo "Checking URL: $url"
            while ! curl --output /dev/null --silent --head --fail --location --write-out '%{http_code}' "$url" | grep '200'; do
              echo "Waiting for $url to be live..."
              sleep 5
            done

            echo "$url is confirmed live with 200 OK status."
            curl --output /dev/null --silent --location "$url"
            echo "$url has been fully visited."
          done   

      - name: Write HTML file list to a file
        run: |
          cat html_files.txt > html_list.txt

      - name: Generate Sitemap
        run: |
          python ./sitemap.py html_list.txt

      - name: Commit and Push Sitemap
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git add docs/sitemap.xml
          git commit -m "Update sitemap" || echo "No changes to commit"
          git fetch --all
          git rebase origin/main  # Replace 'main' with your default branch if different
          git push


  tweet-and-delete:
    runs-on: ubuntu-latest
    needs: check-live-status  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download HTML files list
        uses: actions/download-artifact@v4
        with:
          name: html-files  

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  

      - name: Install requests library
        run: |
          python -m pip install --upgrade pip
          pip install requests  

      - name: Tweet and delete
        env:
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }} 
        run: python tweet_and_delete.py


